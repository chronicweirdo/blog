- modern (in-use) file systems don't offer a good solution for storing custom metadata for files - they don't offer a sollution at all
  - explore and present the current options, if they are viable or not
- looking for a simple approach for storing this metadata alongside files
  - a metadata file in the folder, alongside those files
  - a simple solution, cross-OS, but requires manual management
  - if files get moved or changed, the metadata file does not move or change with them, and without support from the file-system implementation this is difficult to achieve
  - it would be possible to achieve this with an OS-service that monitors the file system and handles metadata updates when files change - but this is not a simple solution,
  it would require significant implementation time, variations in the code for multiple file systems and OS-es, this is not the solution we are looking for
  - the file solution remains the most sensible one, for a start; that file can be copied on different file systems along with the folder
  - current use-case: metadata for images that are saved in "cold-storage", archived, so it requires one single write and is then stored in that format forever
  - the metadata file can be a simple text file that contains the file-names and the metadata, can be opened on all file systems that support text
  - it could have a more structured format, like json, but that also means more work without many additional benefits; you would need some software to display json in a pretty
  format
  - or it could be a local html file, containing the links to the actual files in the folder, alongside the metadata; metadata can be stored in an html table; if the files we are 
  working with are images, the html file can display them, with the metadata alongside them; can be opened on most OS-es, in web browsers, and you get a pretty display of your
  files and their metadata; this seems the best approach for our current use case
  
## Metadata in file systems today

NTFS has something called an [alternate data stream](https://en.wikipedia.org/wiki/NTFS#Alternate_data_streams_.28ADS.29). You can write data to one or more such streams with some
custom code, but Windows Explorer does not list those streams and does not allow you to edit them. When copying your file to a different file system, like a FAT external drive for
long term storage, you get a warning that the alternate streams are not supported and will not be copied, so you loose all yout metadata. If you send the file by email, you loose
the meta-data without being notified.

With Linux, there are many different file systems that can support [extended file attributes](https://en.wikipedia.org/wiki/Extended_file_attributes#Linux), although the limits
on the allowed content size can differ wildly. Also, you have to pay extra care when moving your files between these file systems if you want to preserve you extended attributes.
A solution [reported to work](https://serverfault.com/questions/985191/copy-snyc-files-with-extended-attributes-between-linux-and-bsd) is tar-ing and untar-ing the files, but
it's important that the attribute values are storeable in both file systems. Of course, sending these files over the internet will lose the metadata as well, and the Linux file
systems are not easily compatible with Windows.

MacOS also has support for extended file attributes in its file systems similar to Linux
  
 implementation
 - we need a temporary service/program that can be started and can monitor one or more folders
 - the service also needs to know what the desired meta-data is
 - the program checks if there is a metadata html file in the folder and loads data from it, otherwise it creates a new metadata file with the desired meta-data
 - the program lets the user edit the metatada in the browser, in a table with files in the first column and meta-data in the next colums, with all meta-data columns containing text
 areas that can be edited
 - the user can save the edits (or auto-save can be implemented)
