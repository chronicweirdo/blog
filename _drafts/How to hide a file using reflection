How to hide a file using reflection

Advanced reflection, code that will run on any java version, but if we are on the correct java version it will use the NIO API and hide the file on windows OS.

private void hideFile(File cookieFile) {
        if (System.getProperty("os.name").contains("Windows") &&
                (System.getProperty("java.version").startsWith("1.7")
                        || System.getProperty("java.version").startsWith("1.8"))) {
            try {
                // File has a new method that can return the NIO Path object
                Method m = File.class.getMethod("toPath");
                Object path = m.invoke(cookieFile);
                Class filesClass = Class.forName("java.nio.file.Files");
                // The method we will use from the Files class has variable arguments; which means we will
                // have to send it an array of LinkOption objects; we are not using LinkOption, so this
                // array will be empty.
                Object linkOptionArray = Array.newInstance(Class.forName("java.nio.file.LinkOption"), 0);
                Method setAttribute = filesClass.getMethod("setAttribute", Class.forName("java.nio.file.Path"), String.class, Object.class, linkOptionArray.getClass());
                setAttribute.invoke(null, path, "dos:hidden", true, linkOptionArray);
            } catch (NoSuchMethodException e) {
                log.warn("Unable to hide the " + COMPUTER_COOKIE_FILE_NAME + " file!", e);
            } catch (InvocationTargetException e) {
                log.warn("Unable to hide the " + COMPUTER_COOKIE_FILE_NAME + " file!", e);
            } catch (IllegalAccessException e) {
                log.warn("Unable to hide the " + COMPUTER_COOKIE_FILE_NAME + " file!", e);
            } catch (ClassNotFoundException e) {
                log.warn("Unable to hide the " + COMPUTER_COOKIE_FILE_NAME + " file!", e);
            }
        }
    }